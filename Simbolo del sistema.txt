
Javier@JAVIER-LAPTOP MINGW64 ~
$ cd /c/Cursos/DevOps/REM20250421

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421
$ mkdir demo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421
$ cd demo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo
$ ls

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo
$ explorer

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo
$ git init
Initialized empty Git repository in C:/Cursos/DevOps/REM20250421/demo/.git/

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ explorer .

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git config user.name demo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git config --list
http.sslcainfo=C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt
http.sslbackend=openssl
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
credential.helper=manager
core.editor="C:\\Program Files\\Microsoft VS Code\\bin\\code" --wait
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
credential.helper=store
credential.github.com.usehttppath=true
user.email=35864946+jmagit@users.noreply.github.com
user.name=Javier
core.editor=code --wait --new-window
diff.tool=default-difftool
difftool.default-difftool.cmd=code --wait --diff $LOCAL $REMOTE
merge.tool=code
mergetool.code.cmd=code --wait --merge $REMOTE $LOCAL $BASE $MERGED
alias.st=status
alias.unstage=reset HEAD --
alias.fpush=push origin --force --all
alias.flog=log --pretty=format:"%Cgreen%h%Creset %an, %ar (%ad) : %s%Cred%d"
alias.glog=log --pretty=format:"%h %s" --graph
alias.elog=log --pretty=format:"%h %ae, %ce (%ad) : %s%Cred%d"
alias.borrados=log --diff-filter=D --summary --oneline
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
user.name=demo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git config user.email demo@example.com

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git config --list
http.sslcainfo=C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt
http.sslbackend=openssl
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
credential.helper=manager
core.editor="C:\\Program Files\\Microsoft VS Code\\bin\\code" --wait
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
credential.helper=store
credential.github.com.usehttppath=true
user.email=35864946+jmagit@users.noreply.github.com
user.name=Javier
core.editor=code --wait --new-window
diff.tool=default-difftool
difftool.default-difftool.cmd=code --wait --diff $LOCAL $REMOTE
merge.tool=code
mergetool.code.cmd=code --wait --merge $REMOTE $LOCAL $BASE $MERGED
alias.st=status
alias.unstage=reset HEAD --
alias.fpush=push origin --force --all
alias.flog=log --pretty=format:"%Cgreen%h%Creset %an, %ar (%ad) : %s%Cred%d"
alias.glog=log --pretty=format:"%h %s" --graph
alias.elog=log --pretty=format:"%h %ae, %ce (%ad) : %s%Cred%d"
alias.borrados=log --diff-filter=D --summary --oneline
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
user.name=demo
user.email=demo@example.com

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ echo Hola mundo > f1.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ mkdir ejemplos

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ cd ejemplos

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo/ejemplos (master)
$ echo Hola mundo > f2.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo/ejemplos (master)
$ cd ..

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ cd ejemplos1
bash: cd: ejemplos1: No such file or directory

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ mkdir ejemplos1

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ejemplos/
        f1.txt

nothing added to commit but untracked files present (use "git add" to track)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ejemplos/
        ejemplos1/
        f1.txt

nothing added to commit but untracked files present (use "git add" to track)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status ejemplos
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ejemplos/

nothing added to commit but untracked files present (use "git add" to track)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status ejemplos/
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ejemplos/

nothing added to commit but untracked files present (use "git add" to track)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git add f1.txt
warning: in the working copy of 'f1.txt', LF will be replaced by CRLF the next timeGit touches it

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   f1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ejemplos/
        ejemplos1/


Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git add .
warning: in the working copy of 'ejemplos/f2.txt', LF will be replaced by CRLF the next time Git touches it

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   ejemplos/f2.txt
        new file:   ejemplos1/.gitkeep
        new file:   f1.txt


Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git commit -m inicial
[master (root-commit) 383c7dd] inicial
 3 files changed, 2 insertions(+)
 create mode 100644 ejemplos/f2.txt
 create mode 100644 ejemplos1/.gitkeep
 create mode 100644 f1.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ echo Hola mundo > f2.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ echo Hola mundo >> f1.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        f2.txt

no changes added to commit (use "git add" and/or "git commit -a")

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git add F2.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        f2.txt

no changes added to commit (use "git add" and/or "git commit -a")

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git add f2.txt
warning: in the working copy of 'f2.txt', LF will be replaced by CRLF the next timeGit touches it

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   f2.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt


Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git commit -m segundo
[master 44a69e8] segundo
 1 file changed, 1 insertion(+)
 create mode 100644 f2.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git commit -a -m segundo
warning: in the working copy of 'f1.txt', LF will be replaced by CRLF the next timeGit touches it
[master 385039b] segundo
 1 file changed, 1 insertion(+)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git log
commit 385039ba62a668e5069285e47ce18194f9729363 (HEAD -> master)
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:47:24 2025 +0200

    segundo

commit 44a69e84f03ebb387fe5f132055d1180a17a5727
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:45:15 2025 +0200

    segundo

commit 383c7dd59c0d5cf9efd6a78ced88ee4dc146d07d
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:39:26 2025 +0200

    inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git checkout 383c7dd59c0d5cf9efd6a78ced88ee4dc146d07d
Note: switching to '383c7dd59c0d5cf9efd6a78ced88ee4dc146d07d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 383c7dd inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo ((383c7dd...))
$ git log --oneline
383c7dd (HEAD) inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo ((383c7dd...))
$ git checkout master
Previous HEAD position was 383c7dd inicial
Switched to branch 'master'

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git log --oneline
385039b (HEAD -> master) segundo
44a69e8 segundo
383c7dd inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git checkout 383c7dd
Note: switching to '383c7dd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 383c7dd inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo ((383c7dd...))
$ git checkout 385039b
Previous HEAD position was 383c7dd inicial
HEAD is now at 385039b segundo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo ((385039b...))
$ git log --oneline
385039b (HEAD, master) segundo
44a69e8 segundo
383c7dd inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo ((385039b...))
$ git checkout master
Switched to branch 'master'

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git log --oneline
385039b (HEAD -> master) segundo
44a69e8 segundo
383c7dd inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ echo Hola mundo >> f1.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git checkout 383c7dd
error: Your local changes to the following files would be overwritten by checkout:
        f1.txt
Please commit your changes or stash them before you switch branches.
Aborting

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git checkout --force 383c7dd
Note: switching to '383c7dd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 383c7dd inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo ((383c7dd...))
$ git checkout master
Previous HEAD position was 383c7dd inicial
Switched to branch 'master'

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git log
commit 385039ba62a668e5069285e47ce18194f9729363 (HEAD -> master)
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:47:24 2025 +0200

    segundo

commit 44a69e84f03ebb387fe5f132055d1180a17a5727
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:45:15 2025 +0200

    segundo

commit 383c7dd59c0d5cf9efd6a78ced88ee4dc146d07d
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:39:26 2025 +0200

    inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ echo Hola mundo >> f1.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git diff f1.txt
warning: in the working copy of 'f1.txt', LF will be replaced by CRLF the next timeGit touches it
diff --git a/f1.txt b/f1.txt
index 277633e..9f7300f 100644
--- a/f1.txt
+++ b/f1.txt
@@ -1,2 +1,3 @@
 Hola mundo
 Hola mundo
+Hola mundo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git diff f1.txt
diff --git a/f1.txt b/f1.txt
index 277633e..b4c58a0 100644
--- a/f1.txt
+++ b/f1.txt
@@ -1,2 +1,3 @@
 Hola mundo
+Hello word
 Hola mundo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git diff f1.txt
diff --git a/f1.txt b/f1.txt
index 277633e..785d8b4 100644
--- a/f1.txt
+++ b/f1.txt
@@ -1,2 +1,4 @@
 Hola mundo
+Hello word
 Hola mundo
+Hello word

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git diff f1.txt
diff --git a/f1.txt b/f1.txt
index 277633e..5669834 100644
--- a/f1.txt
+++ b/f1.txt
@@ -1,2 +1,4 @@
+Hola mundooo
+Hello word
 Hola mundo
-Hola mundo
+Hello word

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git commit -a -m tercero
[master 6206ca6] tercero
 1 file changed, 3 insertions(+), 1 deletion(-)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git diff f1.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   f1.txt

no changes added to commit (use "git add" and/or "git commit -a")

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git status
On branch master
nothing to commit, working tree clean

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ cd ..

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421
$ git clone https://github.com/IconoTC/GIT-Avanzado-AF-75916-GR-77485.git curso
Cloning into 'curso'...
remote: Enumerating objects: 13, done.
remote: Counting objects: 100% (13/13), done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 13 (delta 1), reused 13 (delta 1), pack-reused 0 (from 0)
Receiving objects: 100% (13/13), 1.70 MiB | 5.79 MiB/s, done.
Resolving deltas: 100% (1/1), done.

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421
$ cd curso

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ ls
'Configurar con VSCode.txt'                 'Presentación Curso GIT Avanzado.pdf'
 ejemplos/                                   README.md
'Manual de control de versiones (Git).pdf'  'Simbolo del sistema.txt'

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git remote -v
origin  https://github.com/IconoTC/GIT-Avanzado-AF-75916-GR-77485.git (fetch)
origin  https://github.com/IconoTC/GIT-Avanzado-AF-75916-GR-77485.git (push)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git log
commit 19e0fe6fcbe280263fc6237e10f9f122490d6bf3 (HEAD -> master, origin/master, origin/HEAD)
Author: Javier <35864946+jmagit@users.noreply.github.com>
Date:   Tue Apr 22 12:04:55 2025 +0200

    configurar con VSCode

commit a5c880c1c46fdd3bdbe0ca771972a4b919b34b99
Author: Javier <35864946+jmagit@users.noreply.github.com>
Date:   Mon Apr 21 09:54:25 2025 +0200

    inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git log --oneline
19e0fe6 (HEAD -> master, origin/master, origin/HEAD) configurar con VSCode
a5c880c inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git checkout a5c880c
Note: switching to 'a5c880c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at a5c880c inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso ((a5c880c...))
$ git checkout master
Previous HEAD position was a5c880c inicial
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ejemplos/f2.txt
        ejemplos1/
        f1.txt
        f2.txt

nothing added to commit but untracked files present (use "git add" to track)

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git add .
warning: in the working copy of 'ejemplos/f2.txt', LF will be replaced by CRLF the next time Git touches it

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git commit -m 'ejemplos del directorio de trabajo'
[master 28a9daf] ejemplos del directorio de trabajo
 4 files changed, 6 insertions(+)
 create mode 100644 ejemplos/f2.txt
 create mode 100644 ejemplos1/.gitkeep
 create mode 100644 f1.txt
 create mode 100644 f2.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 506 bytes | 253.00 KiB/s, done.
Total 5 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/IconoTC/GIT-Avanzado-AF-75916-GR-77485.git
   19e0fe6..28a9daf  master -> master

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ cd ../demos
bash: cd: ../demos: No such file or directory

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/curso (master)
$ cd ../demo

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ ls
ejemplos/  ejemplos1/  f1.txt  f2.txt

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ code .

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git log
commit 6206ca67db2428a127f3e6ddea252774a78bcb62 (HEAD -> master)
Author: demo <demo@example.com>
Date:   Tue Apr 22 13:08:27 2025 +0200

    tercero

commit 385039ba62a668e5069285e47ce18194f9729363
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:47:24 2025 +0200

    segundo

commit 44a69e84f03ebb387fe5f132055d1180a17a5727
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:45:15 2025 +0200

    segundo

commit 383c7dd59c0d5cf9efd6a78ced88ee4dc146d07d
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:39:26 2025 +0200

    inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$ git log
commit 6206ca67db2428a127f3e6ddea252774a78bcb62 (HEAD -> master)
Author: demo <demo@example.com>
Date:   Tue Apr 22 13:08:27 2025 +0200

    tercero

commit 385039ba62a668e5069285e47ce18194f9729363
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:47:24 2025 +0200

    segundo

commit 44a69e84f03ebb387fe5f132055d1180a17a5727
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:45:15 2025 +0200

    segundo

commit 383c7dd59c0d5cf9efd6a78ced88ee4dc146d07d
Author: demo <demo@example.com>
Date:   Tue Apr 22 12:39:26 2025 +0200

    inicial

Javier@JAVIER-LAPTOP MINGW64 /c/Cursos/DevOps/REM20250421/demo (master)
$
